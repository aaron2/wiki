# creates an empty wiki.db and/or fts.db

package require sqlite3

proc wiki {} {
    if {[file exists wiki.db]} {
        puts "wiki.db exists"
        exit 1
    }
    sqlite3 new wiki.db
    
    set fh [open schema r]
    new eval [read $fh]
    close $fh
    
    set settings {
        TF "%H:%M %m/%d/%Y"
        NAME "wiki: "
        TZ America/Los_Angeles
        FILTER_HTML 1
        HTML_WHITELIST "a b br center dd div dt h1 h2 h3 h4 h5 hr i img li ol p pre span strike table td th tr u ul"
        ANON_CREATE 1
        PROTECT 5
        EXPIRES "7 days"
        RECAPTCHA_PRIVATE_KEY ""
        RECAPTCHA_PUBLIC_KEY ""
    }
    
    foreach {key val} $settings {
        new eval {insert into settings (name,val) values($key,$val)}
    }
    
    # pass is password
    new eval {insert into users (user,password,created,level) values('admin','5F4DCC3B5AA765D61D8327DEB882CF99',datetime('now'),30)}
    
    #if {![new exists {select node from tags where name='wiki:home'}]} {
    #    set name Home
    #    set content "Welcome to your new wiki!"
    #    new eval {insert into nodes (name,content,parsed,protect,modified,created) values($name,$content,$content,0,datetime('now'),datetime('now'))}
    #    set home [new last_insert_rowid]
    #    new eval {insert into tags (name,node) values('wiki:home',$home)}
    #}
    
    return wiki.db
}

proc fts {} {
    if {[file exists wiki.db] && [file exists rebuild_ft_index]} {
        exec rebuild_ft_index
        puts "rebuilt fts.db from wiki.db"
    } elseif {![file exists fts.db]} {
        sqlite3 fts fts.db
        fts eval {create virtual table search use fts3('id','name','protect','content', tokenize porter)}
        puts "created empty fts.db"
    }
}

if {[llength $argv] == 0} { set argv [list wiki fts] }
foreach x $argv {
    if {[info commands $x] != ""} {
        $x
    }
}

